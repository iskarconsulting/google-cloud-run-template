name: 02 Provision App Resources

on:
  workflow_dispatch:
  push:
    branches: 
      - "main"
    paths:
      - ".github/workflows/02-iac-provision-app-resources.yml"
      - "iac/02-app-resources/**"

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

# https://docs.github.com/en/actions/learn-github-actions/contexts#github-context

    env:
      TF_VAR_gcp_region_name: ${{ vars.GCP_REGION_NAME }}
      TF_VAR_gcp_organisation_id: ${{ vars.GCP_ORGANISATION_ID }}
      TF_VAR_gcp_billing_account_id: ${{ vars.GCP_BILLING_ACCOUNT_ID }}
      TF_VAR_gcp_iac_project_id: ${{ vars.GCP_IAC_PROJECT_ID }}
      TF_VAR_gcp_iac_state_bucket_id: ${{ vars.GCP_IAC_STATE_BUCKET_ID }}
      TF_VAR_gcp_iac_service_account_email: ${{ vars.GCP_IAC_SERVICE_ACCOUNT_EMAIL }}
      TF_VAR_container_image: ${{ vars.WEB_CONTAINER_IMAGE }}
      TF_VAR_container_port: ${{ vars.WEB_CONTAINER_PORT }}
      TF_VAR_github_workspace: ${{ github.workspace }}
      TF_VAR_github_repository: ${{ github.repository }}
      TF_VAR_github_token: ${{ secrets.GH_REPOSITORY_PAT }}
      #TF_VAR_github_token: ${{ secrets.GITHUB_TOKEN }} # TODO Remove GH_REPOSITORY_PAT and use this line if GITHUB_TOKEN ever gets secrets.read permission.

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Authorisation.
    # Action automatically exports the GOOGLE_APPLICATION_CREDENTIALS environment variable.
    - name: Authorise with GCloud
      uses: "google-github-actions/auth@v1"
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_IAC_CREDENTIALS }}

    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.9

    - name: Terraform Format
      run: terraform -chdir=iac/02-app-resources fmt -check # Purposely fails and stops the workflow if -check is passed and files need formatting.

    - name: Terraform Init
      run: |
        terraform -chdir=iac/02-app-resources init -input=false -backend-config='bucket=${{ vars.GCP_IAC_STATE_BUCKET_ID }}' -backend-config='prefix=terraform/state/02-app'

    - name: Terraform Validate
      run: |
        terraform validate -no-color

    - name: Zip Billing Budget Resource Manager Function Source
      run: |
        pushd ./iac/02-app-resources/billing-budget-resource-manager-function
        zip function-source.zip function.js package.json
        popd

    - name: Terraform Plan
      id: plan
      run: |
        terraform -chdir=iac/02-app-resources plan -input=false

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: |
        exit 1

    - name: Terraform Apply
      run: |
        terraform -chdir=iac/02-app-resources apply -input=false -auto-approve
